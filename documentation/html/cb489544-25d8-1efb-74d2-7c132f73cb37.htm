<!DOCTYPE html >
<html lang="en-US">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <link rel="shortcut icon" href="../icons/favicon.ico" />
    <link rel="stylesheet" href="../css/bulma.css" />
    <link rel="stylesheet" href="../css/font-awesome.min.css" />
    <link rel="stylesheet" href="../css/presentationStyle.css" />
    <link rel="stylesheet" href="../css/vs.min.css" />
    <script src="../scripts/jquery-3.5.1.min.js"></script>
    <script src="../scripts/clipboard.min.js"></script>
    <script src="../scripts/highlight.min.js"></script>
    <script src="../scripts/presentationStyle.js"></script>
    <title>UrlPrinterDiscoverer.FindPrinters Method</title>
    <meta name="Title" content="FindPrinters" />
    <meta name="Help.Id" content="M:Zebra.Sdk.Printer.Discovery.UrlPrinterDiscoverer.FindPrinters(System.String,Zebra.Sdk.Printer.Discovery.DiscoveryHandler)" />
    <meta name="Help.ContentType" content="Reference" />
    <meta name="container" content="Zebra.Sdk.Printer.Discovery" />
    <meta name="guid" content="cb489544-25d8-1efb-74d2-7c132f73cb37" />
    <meta name="Description" content="This method will search using a combination of discovery methods to find the printer described by the specified URL." />
    <meta name="tocFile" content="../toc/IDAPYB.xml" />
  </head>
  <body>
    <div class="fixedLayout">
      <div id="Header" class="fixedHeader">
        <div class="pageHeader level mb-0 py-2 px-4">
          <div id="TitleContainer" class="level-left">
            <div id="DocumentationTitle" class="level-item">Zebra API (build v3.01.332)</div>
          </div>
          <div id="LangFilterSearchContainer" class="level-right">
            <div class="level-item">
              <div class="dropdown is-hoverable">
                <div class="dropdown-trigger">
                  <button class="button" aria-haspopup="true" aria-controls="dropdown-menu">
                    <span id="CurrentLanguage"></span>
                    <span class="icon is-small">
                      <i class="fa fa-angle-down" aria-hidden="true"></i>
                    </span>
                  </button>
                </div>
                <div class="dropdown-menu" role="menu">
                  <div id="LanguageSelections" class="dropdown-content">
                    <a class="dropdown-item languageFilterItem" data-languageId="cs">C#</a>
                    <a class="dropdown-item languageFilterItem" data-languageId="vb">VB</a>
                    <a class="dropdown-item languageFilterItem" data-languageId="cpp">C++</a>
                  </div>
                </div>
              </div>
            </div>
            <div class="level-item">
              <form id="SearchForm" action="#" onsubmit="TransferToSearchPage(); return false;">
                <div class="field">
                  <div class="control has-icons-left">
                    <input id="SearchTerms" class="input" type="text" maxlength="200" placeholder="Search" />
                    <span class="icon is-small is-left">
                      <i class="fa fa-search"></i>
                    </span>
                    <button id="SearchButton" type="submit" class="is-hidden"></button>
                  </div>
                </div>
              </form>
            </div>
          </div>
        </div>
      </div>
      <div class="fixedContent">
        <nav class="breadcrumb my-1 px-2 border-bottom" role="navigation">
          <ul id="TopicBreadcrumbs" />
        </nav>
        <div class="columns pl-5 pr-5 fixedContent">
          <div id="ShowHideTOCColumn" class="column is-hidden-tablet">
            <a id="ShowHideTOC">Show/Hide TOC</a>
          </div>
          <div id="TOCColumn" class="column is-hidden-mobile">
            <nav class="toc">
              <ul id="TableOfContents" class="toc-menu" />
            </nav>
          </div>
          <div id="TopicContent" class="column content is-7">
            <h1>Url<wbr />Printer<wbr />Discoverer<span id="LSTE2FD5D36_0" data-languageSpecificText="cpp=::|nu=."></span>Find<wbr />Printers Method</h1>
            <div class="summary">
            This method will search using a combination of discovery methods to find the printer described by the specified URL. (Windows 10 only)
            </div>
            <h2 class="quickLinkHeader">
              <span class="icon toggleSection" tabindex="0">
                <i class="fa fa-angle-down"></i>
              </span>Definition</h2>
            <div id="IDBSection">
              <strong>Namespace:</strong> <a href="90a67da0-cfcc-b17d-aa23-8f34873b31db.htm">Zebra.Sdk.Printer.Discovery</a><br /><strong>Assembly:</strong> SdkApi.Desktop (in SdkApi.Desktop.dll) Version: 3.01.332<div class="codeSnippet" data-codeSnippetLanguage="cs"><div class="codeHeader"><span class="codeHeaderTitle">C#</span><span class="buttons"><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-cs"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="identifier">FindPrinters</span>(
	<span class="identifier">string</span> <span class="parameter">url</span>,
	<span class="identifier">DiscoveryHandler</span> <span class="parameter">discoveryHandler</span>
)</code></pre></div></div><div class="codeSnippet is-hidden" data-codeSnippetLanguage="vb"><div class="codeHeader"><span class="codeHeaderTitle">VB</span><span class="buttons"><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-vb"><span class="keyword">Public</span> <span class="keyword">Shared</span> <span class="keyword">Sub</span> <span class="identifier">FindPrinters</span> ( 
	<span class="parameter">url</span> <span class="keyword">As</span> <span class="identifier">String</span>,
	<span class="parameter">discoveryHandler</span> <span class="keyword">As</span> <span class="identifier">DiscoveryHandler</span>
)</code></pre></div></div><div class="codeSnippet is-hidden" data-codeSnippetLanguage="cpp"><div class="codeHeader"><span class="codeHeaderTitle">C++</span><span class="buttons"><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-cpp"><span class="keyword">public</span>:
<span class="keyword">static</span> <span class="keyword">void</span> <span class="identifier">FindPrinters</span>(
	<span class="identifier">String</span>^ <span class="parameter">url</span>, 
	<span class="identifier">DiscoveryHandler</span>^ <span class="parameter">discoveryHandler</span>
)</code></pre></div></div><h4>Parameters</h4><dl><dt class="has-text-weight-normal"><span class="parameter">url</span>  <span class="noLink">String</span></dt><dd>The URL describing the targeted printer (Typically, this information is encoded on an NFC tag attached
            to the printer)<br />
            Example:<br /> 
            "http://www.zebra.com/apps/r/nfc?mBL=00225832C75F&amp;mW=000000000000&amp;mE=000000000000&amp;c=QN3-AUBA0E01-00&amp;s=XXQLJ112600422&amp;v=0"</dd><dt class="has-text-weight-normal"><span class="parameter">discoveryHandler</span>  <a href="9f47cfa6-6581-189d-e75b-fe99219e8230.htm">DiscoveryHandler</a></dt><dd>A <a href="9f47cfa6-6581-189d-e75b-fe99219e8230.htm">DiscoveryHandler</a> instance that is used to handle discovery events (e.g. found a
            printer, errors, discovery finished).</dd></dl></div>
            <h2 class="quickLinkHeader">
              <span class="icon toggleSection" tabindex="0">
                <i class="fa fa-angle-down"></i>
              </span>Remarks</h2>
            <div id="IDBCSection">
            This method will invoke the <a href="a5810cec-247d-8966-bf61-672709c4e8b5.htm">FoundPrinter(DiscoveredPrinter)</a> method for each interface that 
            the specified printer is found. <a href="d731a0da-9786-e40b-d24d-781440344524.htm">DiscoveryFinished<span id="LSTE2FD5D36_1" data-languageSpecificText="cs=()|vb=|cpp=()|nu=()|fs=()"></span></a> will be invoked when the discovery is 
            finished and <a href="be907cb9-4981-1015-5548-56f1f9909230.htm">DiscoveryError(String)</a> will be invoked when any errors are encountered during 
            discovery. When <a href="be907cb9-4981-1015-5548-56f1f9909230.htm">DiscoveryError(String)</a> is invoked, the discovery will be canceled and 
            <a href="d731a0da-9786-e40b-d24d-781440344524.htm">DiscoveryFinished<span id="LSTE2FD5D36_2" data-languageSpecificText="cs=()|vb=|cpp=()|nu=()|fs=()"></span></a> will not be invoked.<br /><br />
            This method will typically be used when reading an NFC tag attached to a Zebra printer. To launch your app when a
            Zebra NFC tag is read:<br /><ul><li>Register to listen for Zebra NFC Tag scans in your application</li><li>Handle the NFC scan in your application</li></ul></div>
            <h2 class="quickLinkHeader">
              <span class="icon toggleSection" tabindex="0">
                <i class="fa fa-angle-down"></i>
              </span>Example</h2>
            <div id="IDFCSection">
              <div class="codeSnippet">
                <div class="codeHeader">
                  <span class="codeHeaderTitle">C#</span>
                  <button class="button is-small is-light copyCode" title="Copy">
                    <span class="icon is-small">
                      <i class="fa fa-copy"></i>
                    </span>
                    <span>Copy</span>
                  </button>
                </div>
                <div class="codePanel hljs">
                  <pre xml:space="preserve">
                    <code class="language-cs">using System;
using System.Diagnostics;
using Windows.Networking.Proximity;
using Windows.Storage.Streams;
using Zebra.Sdk.Comm;
using Zebra.Sdk.Printer;
using Zebra.Sdk.Printer.Discovery;

public class UrlPrinterDiscovererExample {

    private long messageId = -1;
    private ProximityDevice proximityDevice = null;

    public void SubscribeForNfcMessage() {
        proximityDevice = ProximityDevice.GetDefault();
        if (proximityDevice != null) {
            if (messageId == -1) {  // Only subscribe once
                messageId = proximityDevice.SubscribeForMessage("WindowsUri", (device, message) =&gt; {
                    using (var reader = DataReader.FromBuffer(message.Data)) {
                        reader.UnicodeEncoding = UnicodeEncoding.Utf16LE;
                        string receivedMessage = reader.ReadString(reader.UnconsumedBufferLength / 2 - 1);

                        ProcessReceivedMessage(receivedMessage);
                    }
                });
            }
        }
    }

    public void UnsubscribeForNfcMessage() {
        if (proximityDevice != null) {
            proximityDevice.StopSubscribingForMessage(messageId);
            messageId = -1;
        }
    }

    private void ProcessReceivedMessage(string message) {
        try {
            UrlPrinterDiscoveryHandler urlDiscoHandler = new UrlPrinterDiscoveryHandler();
            UrlPrinterDiscoverer.FindPrinters(message, urlDiscoHandler);
        } catch (DiscoveryException e) {
            Debug.WriteLine(e.ToString());
        }
    }

    private class UrlPrinterDiscoveryHandler : DiscoveryHandler {

        public void DiscoveryError(string message) {
        }

        public void DiscoveryFinished() {
        }

        public void FoundPrinter(DiscoveredPrinter printer) {
            Connection connection = null;
            try {
                connection = printer.GetConnection();
                connection.Open();

                ZebraPrinter zebraPrinter = ZebraPrinterFactory.GetInstance(connection);
                if (zebraPrinter != null) {
                    zebraPrinter.PrintConfigurationLabel();
                }
            } catch (Exception e) {
                Debug.WriteLine(e.ToString());
            } finally {
                if (connection != null) {
                    try {
                        connection.Close();
                    } catch { }
                }
            }
        }
    }
}</code>
                  </pre>
                </div>
              </div>
            </div>
            <h2 class="quickLinkHeader">
              <span class="icon toggleSection" tabindex="0">
                <i class="fa fa-angle-down"></i>
              </span>Exceptions</h2>
            <div id="IDECSection">
              <table class="table is-hoverable">
                <tr>
                  <td>
                    <a href="46f83d61-5172-3ca2-7b86-f76f8c6baeb6.htm">DiscoveryException</a>
                  </td>
                  <td>If an error occurs while starting the discovery (errors during discovery will be sent
            via <a href="be907cb9-4981-1015-5548-56f1f9909230.htm">DiscoveryError(String)</a>).</td>
                </tr>
              </table>
            </div>
            <h2 class="quickLinkHeader">
              <span class="icon toggleSection" tabindex="0">
                <i class="fa fa-angle-down"></i>
              </span>See Also</h2>
            <div id="seeAlsoSection">
              <h4>Reference</h4>
              <div>
                <a href="23d5001d-aa07-fecd-54e2-9e9bdcda8ea9.htm">UrlPrinterDiscoverer Class</a>
              </div>
              <div>
                <a href="90a67da0-cfcc-b17d-aa23-8f34873b31db.htm">Zebra.Sdk.Printer.Discovery Namespace</a>
              </div>
            </div>
          </div>
          <div id="InThisArticleColumn" class="column is-hidden-mobile">
            <nav class="menu sticky is-hidden">
              <p class="menu-label">
                <strong>In This Article</strong>
              </p>
              <ul id="InThisArticleMenu" class="menu-list">
                <li>
                  <a class="quickLink">Definition</a>
                </li>
                <li>
                  <a class="quickLink">Remarks</a>
                </li>
                <li>
                  <a class="quickLink">Example</a>
                </li>
                <li>
                  <a class="quickLink">Exceptions</a>
                </li>
                <li>
                  <a class="quickLink">See Also</a>
                </li>
              </ul>
            </nav>
          </div>
        </div>
      </div>
      <footer id="PageFooter" class="footer border-top py-3 fixedFooter">
        <div class="columns">
          <div class="column">
            <p>© 2024 Zebra Technologies Corporation and/or its affiliates. All rights reserved.</p> 
				</div>
          <div class="column"> 
				</div>
        </div>
      </footer>
    </div>
    <script>$(function(){
SetDefaultLanguage("cs");
LoadTocFile(null, null);
InitializeQuickLinks();

$(".toggleSection" ).click(function () {
    SectionExpandCollapse(this);
});

$(".toggleSection").keypress(function () {
    SectionExpandCollapseCheckKey(this, event)
});
hljs.highlightAll();
});</script>
  </body>
</html>