<!DOCTYPE html >
<html lang="en-US">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <link rel="shortcut icon" href="../icons/favicon.ico" />
    <link rel="stylesheet" href="../css/bulma.css" />
    <link rel="stylesheet" href="../css/font-awesome.min.css" />
    <link rel="stylesheet" href="../css/presentationStyle.css" />
    <link rel="stylesheet" href="../css/vs.min.css" />
    <script src="../scripts/jquery-3.5.1.min.js"></script>
    <script src="../scripts/clipboard.min.js"></script>
    <script src="../scripts/highlight.min.js"></script>
    <script src="../scripts/presentationStyle.js"></script>
    <title>ConnectionA.SendAndWaitForValidResponse(BinaryWriter, BinaryReader, Int32, Int32, ResponseValidator) Method</title>
    <meta name="Title" content="SendAndWaitForValidResponse(BinaryWriter, BinaryReader, Int32, Int32, ResponseValidator)" />
    <meta name="Help.Id" content="M:Zebra.Sdk.Comm.ConnectionA.SendAndWaitForValidResponse(System.IO.BinaryWriter,System.IO.BinaryReader,System.Int32,System.Int32,Zebra.Sdk.Comm.ResponseValidator)" />
    <meta name="Help.ContentType" content="Reference" />
    <meta name="container" content="Zebra.Sdk.Comm" />
    <meta name="guid" content="0ba5e51d-058a-36b9-3e79-0a5fbe9f9a8d" />
    <meta name="Description" content="Sends data from sourceStream and writes the response data to destinationStream." />
    <meta name="tocFile" content="../toc/IDIBFUB.xml" />
  </head>
  <body>
    <div class="fixedLayout">
      <div id="Header" class="fixedHeader">
        <div class="pageHeader level mb-0 py-2 px-4">
          <div id="TitleContainer" class="level-left">
            <div id="DocumentationTitle" class="level-item">Zebra API (build v3.01.332)</div>
          </div>
          <div id="LangFilterSearchContainer" class="level-right">
            <div class="level-item">
              <div class="dropdown is-hoverable">
                <div class="dropdown-trigger">
                  <button class="button" aria-haspopup="true" aria-controls="dropdown-menu">
                    <span id="CurrentLanguage"></span>
                    <span class="icon is-small">
                      <i class="fa fa-angle-down" aria-hidden="true"></i>
                    </span>
                  </button>
                </div>
                <div class="dropdown-menu" role="menu">
                  <div id="LanguageSelections" class="dropdown-content">
                    <a class="dropdown-item languageFilterItem" data-languageId="cs">C#</a>
                    <a class="dropdown-item languageFilterItem" data-languageId="vb">VB</a>
                    <a class="dropdown-item languageFilterItem" data-languageId="cpp">C++</a>
                  </div>
                </div>
              </div>
            </div>
            <div class="level-item">
              <form id="SearchForm" action="#" onsubmit="TransferToSearchPage(); return false;">
                <div class="field">
                  <div class="control has-icons-left">
                    <input id="SearchTerms" class="input" type="text" maxlength="200" placeholder="Search" />
                    <span class="icon is-small is-left">
                      <i class="fa fa-search"></i>
                    </span>
                    <button id="SearchButton" type="submit" class="is-hidden"></button>
                  </div>
                </div>
              </form>
            </div>
          </div>
        </div>
      </div>
      <div class="fixedContent">
        <nav class="breadcrumb my-1 px-2 border-bottom" role="navigation">
          <ul id="TopicBreadcrumbs" />
        </nav>
        <div class="columns pl-5 pr-5 fixedContent">
          <div id="ShowHideTOCColumn" class="column is-hidden-tablet">
            <a id="ShowHideTOC">Show/Hide TOC</a>
          </div>
          <div id="TOCColumn" class="column is-hidden-mobile">
            <nav class="toc">
              <ul id="TableOfContents" class="toc-menu" />
            </nav>
          </div>
          <div id="TopicContent" class="column content is-7">
            <h1>Connection<wbr />A<span id="LSTEE4518B0_0" data-languageSpecificText="cpp=::|nu=."></span>Send<wbr />And<wbr />Wait<wbr />For<wbr />Valid<wbr />Response(Binary<wbr />Writer, Binary<wbr />Reader, Int<wbr />32, Int<wbr />32, Response<wbr />Validator) Method</h1>
            <div class="summary">
            Sends data from <span class="code">sourceStream</span> and writes the response data to destinationStream.
            </div>
            <h2 class="quickLinkHeader">
              <span class="icon toggleSection" tabindex="0">
                <i class="fa fa-angle-down"></i>
              </span>Definition</h2>
            <div id="IDBSection">
              <strong>Namespace:</strong> <a href="85823b27-9fa5-7681-c212-8e536f601bbe.htm">Zebra.Sdk.Comm</a><br /><strong>Assembly:</strong> SdkApi.Core (in SdkApi.Core.dll) Version: 3.01.332<div class="codeSnippet" data-codeSnippetLanguage="cs"><div class="codeHeader"><span class="codeHeaderTitle">C#</span><span class="buttons"><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-cs"><span class="keyword">public</span> <span class="keyword">virtual</span> <span class="keyword">void</span> <span class="identifier">SendAndWaitForValidResponse</span>(
	<span class="identifier">BinaryWriter</span> <span class="parameter">destinationStream</span>,
	<span class="identifier">BinaryReader</span> <span class="parameter">sourceStream</span>,
	<span class="identifier">int</span> <span class="parameter">initialResponseTimeout</span>,
	<span class="identifier">int</span> <span class="parameter">responseCompletionTimeout</span>,
	<span class="identifier">ResponseValidator</span> <span class="parameter">validator</span>
)</code></pre></div></div><div class="codeSnippet is-hidden" data-codeSnippetLanguage="vb"><div class="codeHeader"><span class="codeHeaderTitle">VB</span><span class="buttons"><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-vb"><span class="keyword">Public</span> <span class="keyword">Overridable</span> <span class="keyword">Sub</span> <span class="identifier">SendAndWaitForValidResponse</span> ( 
	<span class="parameter">destinationStream</span> <span class="keyword">As</span> <span class="identifier">BinaryWriter</span>,
	<span class="parameter">sourceStream</span> <span class="keyword">As</span> <span class="identifier">BinaryReader</span>,
	<span class="parameter">initialResponseTimeout</span> <span class="keyword">As</span> <span class="identifier">Integer</span>,
	<span class="parameter">responseCompletionTimeout</span> <span class="keyword">As</span> <span class="identifier">Integer</span>,
	<span class="parameter">validator</span> <span class="keyword">As</span> <span class="identifier">ResponseValidator</span>
)</code></pre></div></div><div class="codeSnippet is-hidden" data-codeSnippetLanguage="cpp"><div class="codeHeader"><span class="codeHeaderTitle">C++</span><span class="buttons"><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-cpp"><span class="keyword">public</span>:
<span class="keyword">virtual</span> <span class="keyword">void</span> <span class="identifier">SendAndWaitForValidResponse</span>(
	<span class="identifier">BinaryWriter</span>^ <span class="parameter">destinationStream</span>, 
	<span class="identifier">BinaryReader</span>^ <span class="parameter">sourceStream</span>, 
	<span class="identifier">int</span> <span class="parameter">initialResponseTimeout</span>, 
	<span class="identifier">int</span> <span class="parameter">responseCompletionTimeout</span>, 
	<span class="identifier">ResponseValidator</span>^ <span class="parameter">validator</span>
)</code></pre></div></div><h4 class="quickLinkHeader">Parameters</h4><dl><dt class="has-text-weight-normal"><span class="parameter">destinationStream</span>  <span class="noLink">BinaryWriter</span></dt><dd>Destination for response.</dd><dt class="has-text-weight-normal"><span class="parameter">sourceStream</span>  <span class="noLink">BinaryReader</span></dt><dd>Source of data to be sent.</dd><dt class="has-text-weight-normal"><span class="parameter">initialResponseTimeout</span>  <span class="noLink">Int32</span></dt><dd>The maximum time, in milliseconds, to wait for the initial response to be received. 
            If no data is received during this time, the function does not write any data to the destination stream.</dd><dt class="has-text-weight-normal"><span class="parameter">responseCompletionTimeout</span>  <span class="noLink">Int32</span></dt><dd>After the initial response, if no data is received for this period of time, the 
            input is considered complete and the method returns.</dd><dt class="has-text-weight-normal"><span class="parameter">validator</span>  <a href="fe84df97-f30a-222a-a2c1-9428c89fc943.htm">ResponseValidator</a></dt><dd>If the response satisfies this validator, the input is considered complete and the method returns. 
            May be used to avoid waiting for more data when the response follows a known format.If validator is null, no validation is performed. 
            When performing validation, this method will use enough memory to hold the entire response.</dd></dl><h4 class="quickLinkHeader">Implements</h4><a href="33be9f92-b2fb-33f5-94b0-67ca7cf25eb1.htm">Connection<span id="LSTEE4518B0_1" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>SendAndWaitForValidResponse(BinaryWriter, BinaryReader, Int32, Int32, ResponseValidator)</a><br /></div>
            <h2 class="quickLinkHeader">
              <span class="icon toggleSection" tabindex="0">
                <i class="fa fa-angle-down"></i>
              </span>Remarks</h2>
            <div id="IDBCSection">
            The software returns immediately if the data received satisfies <span class="code">validator</span>. The connection must be open before this method is called. 
            If <span class="code">sendAndWaitForResponse</span> is called when a connection is closed, a <span class="code">ConnectionException</span> is thrown.
            </div>
            <h2 class="quickLinkHeader">
              <span class="icon toggleSection" tabindex="0">
                <i class="fa fa-angle-down"></i>
              </span>Exceptions</h2>
            <div id="IDHCSection">
              <table class="table is-hoverable">
                <tr>
                  <td>
                    <a href="3c2cfe78-466e-3c50-8ad5-48304fef5956.htm">ConnectionException</a>
                  </td>
                  <td>If an I/O error occurs.</td>
                </tr>
              </table>
            </div>
            <h2 class="quickLinkHeader">
              <span class="icon toggleSection" tabindex="0">
                <i class="fa fa-angle-down"></i>
              </span>See Also</h2>
            <div id="seeAlsoSection">
              <h4>Reference</h4>
              <div>
                <a href="4334f86a-5198-cc30-2e5a-45891802008e.htm">ConnectionA Class</a>
              </div>
              <div>
                <a href="40d095ba-49d4-83a5-7f6c-dd6e9b72d7d3.htm">SendAndWaitForValidResponse Overload</a>
              </div>
              <div>
                <a href="85823b27-9fa5-7681-c212-8e536f601bbe.htm">Zebra.Sdk.Comm Namespace</a>
              </div>
            </div>
          </div>
          <div id="InThisArticleColumn" class="column is-hidden-mobile">
            <nav class="menu sticky is-hidden">
              <p class="menu-label">
                <strong>In This Article</strong>
              </p>
              <ul id="InThisArticleMenu" class="menu-list">
                <li>
                  <a class="quickLink">Definition</a>
                  <ul class="menu">
                    <li>
                      <a class="quickLink">Parameters</a>
                    </li>
                    <li>
                      <a class="quickLink">Implements</a>
                    </li>
                  </ul>
                </li>
                <li>
                  <a class="quickLink">Remarks</a>
                </li>
                <li>
                  <a class="quickLink">Exceptions</a>
                </li>
                <li>
                  <a class="quickLink">See Also</a>
                </li>
              </ul>
            </nav>
          </div>
        </div>
      </div>
      <footer id="PageFooter" class="footer border-top py-3 fixedFooter">
        <div class="columns">
          <div class="column">
            <p>© 2024 Zebra Technologies Corporation and/or its affiliates. All rights reserved.</p> 
				</div>
          <div class="column"> 
				</div>
        </div>
      </footer>
    </div>
    <script>$(function(){
SetDefaultLanguage("cs");
LoadTocFile(null, null);
InitializeQuickLinks();

$(".toggleSection" ).click(function () {
    SectionExpandCollapse(this);
});

$(".toggleSection").keypress(function () {
    SectionExpandCollapseCheckKey(this, event)
});
hljs.highlightAll();
});</script>
  </body>
</html>