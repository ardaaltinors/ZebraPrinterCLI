<!DOCTYPE html >
<html lang="en-US">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <link rel="shortcut icon" href="../icons/favicon.ico" />
    <link rel="stylesheet" href="../css/bulma.css" />
    <link rel="stylesheet" href="../css/font-awesome.min.css" />
    <link rel="stylesheet" href="../css/presentationStyle.css" />
    <link rel="stylesheet" href="../css/vs.min.css" />
    <script src="../scripts/jquery-3.5.1.min.js"></script>
    <script src="../scripts/clipboard.min.js"></script>
    <script src="../scripts/highlight.min.js"></script>
    <script src="../scripts/presentationStyle.js"></script>
    <title>MultichannelConnection Methods</title>
    <meta name="Title" content="Methods" />
    <meta name="Help.Id" content="Methods.T:Zebra.Sdk.Comm.MultichannelConnection" />
    <meta name="Help.ContentType" content="Reference" />
    <meta name="container" content="Zebra.Sdk.Comm" />
    <meta name="guid" content="754aa737-f4df-8c8c-3298-8a7be33666cc" />
    <meta name="tocFile" content="../toc/IDRUB.xml" />
  </head>
  <body>
    <div class="fixedLayout">
      <div id="Header" class="fixedHeader">
        <div class="pageHeader level mb-0 py-2 px-4">
          <div id="TitleContainer" class="level-left">
            <div id="DocumentationTitle" class="level-item">Zebra API (build v3.01.332)</div>
          </div>
          <div id="LangFilterSearchContainer" class="level-right">
            <div class="level-item">
              <div class="dropdown is-hoverable">
                <div class="dropdown-trigger">
                  <button class="button" aria-haspopup="true" aria-controls="dropdown-menu">
                    <span id="CurrentLanguage"></span>
                    <span class="icon is-small">
                      <i class="fa fa-angle-down" aria-hidden="true"></i>
                    </span>
                  </button>
                </div>
                <div class="dropdown-menu" role="menu">
                  <div id="LanguageSelections" class="dropdown-content">
                    <a class="dropdown-item languageFilterItem" data-languageId="cs">C#</a>
                    <a class="dropdown-item languageFilterItem" data-languageId="vb">VB</a>
                    <a class="dropdown-item languageFilterItem" data-languageId="cpp">C++</a>
                  </div>
                </div>
              </div>
            </div>
            <div class="level-item">
              <form id="SearchForm" action="#" onsubmit="TransferToSearchPage(); return false;">
                <div class="field">
                  <div class="control has-icons-left">
                    <input id="SearchTerms" class="input" type="text" maxlength="200" placeholder="Search" />
                    <span class="icon is-small is-left">
                      <i class="fa fa-search"></i>
                    </span>
                    <button id="SearchButton" type="submit" class="is-hidden"></button>
                  </div>
                </div>
              </form>
            </div>
          </div>
        </div>
      </div>
      <div class="fixedContent">
        <nav class="breadcrumb my-1 px-2 border-bottom" role="navigation">
          <ul id="TopicBreadcrumbs" />
        </nav>
        <div class="columns pl-5 pr-5 fixedContent">
          <div id="ShowHideTOCColumn" class="column is-hidden-tablet">
            <a id="ShowHideTOC">Show/Hide TOC</a>
          </div>
          <div id="TOCColumn" class="column is-hidden-mobile">
            <nav class="toc">
              <ul id="TableOfContents" class="toc-menu" />
            </nav>
          </div>
          <div id="TopicContent" class="column content is-7">
            <h1>Multichannel<wbr />Connection Methods</h1>
            <h2 class="quickLinkHeader">
              <span class="icon toggleSection" tabindex="0">
                <i class="fa fa-angle-down"></i>
              </span>Methods</h2>
            <div id="IDADASection">
              <table id="MethodList" class="table is-hoverable">
                <tr>
                  <td>
                    <a href="9fb9d3d8-d6e4-8e62-a11c-c45db473e7e0.htm">AddWriteLogStream</a>
                  </td>
                  <td>
            Sets the stream to log the write data to.
            </td>
                </tr>
                <tr>
                  <td>
                    <a href="bd1ab31a-e3d1-966c-0cf3-c6ccf3a1bfbb.htm">BytesAvailable</a>
                  </td>
                  <td>
            Returns an estimate of the number of bytes that can be read from this connection without blocking.
            </td>
                </tr>
                <tr>
                  <td>
                    <a href="f4237426-8bdb-3d5b-9b3f-c90fd8f1ee9b.htm">Close</a>
                  </td>
                  <td>
            Closes both the printing and status channels of this MultichannelConnection.
            </td>
                </tr>
                <tr>
                  <td>
                    <a href="7e88cfca-cfca-dea8-ba6d-a9d151c047a1.htm">ClosePrintingChannel</a>
                  </td>
                  <td>
            Closes the printing channel of this MultichannelConnection.
            </td>
                </tr>
                <tr>
                  <td>
                    <a href="0ff03ce3-8689-0ac6-f452-0995959c536b.htm">CloseStatusChannel</a>
                  </td>
                  <td>
             Closes the status channel of this MultichannelConnection.
            </td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">Equals</span>
                  </td>
                  <td>
                    <br />(Inherited from <span class="noLink">Object</span>)</td>
                </tr>
                <tr>
                  <td>
                    <a href="2307d7a5-99c6-6ccc-daad-918b9caf29c6.htm">GetConnectionReestablisher</a>
                  </td>
                  <td>
            Returns a <span class="code">ConnectionReestablisher</span> which allows for easy recreation of a connection which may have been closed.
            </td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">GetHashCode</span>
                  </td>
                  <td>
                    <br />(Inherited from <span class="noLink">Object</span>)</td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">GetType</span>
                  </td>
                  <td>
                    <br />(Inherited from <span class="noLink">Object</span>)</td>
                </tr>
                <tr>
                  <td>
                    <a href="dff88650-68e5-5a26-d9a2-07f5d802f6e4.htm">Open</a>
                  </td>
                  <td>
            Opens both the printing and status channel of this Multichannel connection.
            </td>
                </tr>
                <tr>
                  <td>
                    <a href="c4f61fbd-b026-9a8d-25c7-c970fc402fe1.htm">OpenPrintingChannel</a>
                  </td>
                  <td>
            Opens the printing channel of this Multichannel connection.
            </td>
                </tr>
                <tr>
                  <td>
                    <a href="1566a794-e462-beda-3e5e-f638e2d93839.htm">OpenStatusChannel</a>
                  </td>
                  <td>
            Opens the status channel of this Multichannel connection.
            </td>
                </tr>
                <tr>
                  <td>
                    <a href="2e98d431-ef10-d409-0896-d71bdfacca1b.htm">Read<span id="LST435A06B4_0" data-languageSpecificText="cs=()|vb=|cpp=()|nu=()|fs=()"></span></a>
                  </td>
                  <td>
            Reads all the available data from the connection. This call is non-blocking.
            </td>
                </tr>
                <tr>
                  <td>
                    <a href="f0b5d793-7999-5d39-b179-b1bd642cf9a0.htm">Read(BinaryWriter)</a>
                  </td>
                  <td>
            Reads all the available data from the connection.
            </td>
                </tr>
                <tr>
                  <td>
                    <a href="0c0ea6f9-9e47-2183-e0f2-7527fc9124a0.htm">ReadChar</a>
                  </td>
                  <td>
            Reads the next byte of data from the connection.
            </td>
                </tr>
                <tr>
                  <td>
                    <a href="42ec305c-ab34-9f4a-f9bf-a753eb82125d.htm">SendAndWaitForResponse(<span id="LST435A06B4_1" data-languageSpecificText="cpp=array&lt;"></span>Byte<span id="LST435A06B4_2" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, Int32, Int32, String)</a>
                  </td>
                  <td>
            Sends <span class="code">dataToSend</span> and returns the response data.
            </td>
                </tr>
                <tr>
                  <td>
                    <a href="b265ee30-c1f5-7ef9-7d87-79b8b9c90fcf.htm">SendAndWaitForResponse(BinaryWriter, BinaryReader, Int32, Int32, String)</a>
                  </td>
                  <td>
            Sends data from <span class="code">sourceStream</span> and writes the response data to destinationStream.
            </td>
                </tr>
                <tr>
                  <td>
                    <a href="46127ca2-5814-df8f-f8e8-61fea5b58d25.htm">SendAndWaitForValidResponse(<span id="LST435A06B4_3" data-languageSpecificText="cpp=array&lt;"></span>Byte<span id="LST435A06B4_4" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, Int32, Int32, ResponseValidator)</a>
                  </td>
                  <td>
            Sends <span class="code">dataToSend</span> and returns the response data.
            </td>
                </tr>
                <tr>
                  <td>
                    <a href="47815b0f-02d1-3d60-06c9-4de378b6f255.htm">SendAndWaitForValidResponse(BinaryWriter, BinaryReader, Int32, Int32, ResponseValidator)</a>
                  </td>
                  <td>
            Sends data from <span class="code">sourceStream</span> and writes the response data to destinationStream.
            </td>
                </tr>
                <tr>
                  <td>
                    <span class="noLink">ToString</span>
                  </td>
                  <td>
                    <br />(Inherited from <span class="noLink">Object</span>)</td>
                </tr>
                <tr>
                  <td>
                    <a href="3d71ff50-d71c-ab5d-5b68-881abc1e82ce.htm">WaitForData</a>
                  </td>
                  <td>
            Causes the currently executing thread to sleep until <a href="a686c67a-0a3b-c4f2-995e-bd1f606199b1.htm">BytesAvailable<span id="LST435A06B4_5" data-languageSpecificText="cs=()|vb=|cpp=()|nu=()|fs=()"></span></a> &gt; 0, or for a maximum of 
            <span class="code">maxTimeout</span> milliseconds.
            </td>
                </tr>
                <tr>
                  <td>
                    <a href="58bbc055-e824-5a0a-2ea9-af6ae6d0607f.htm">Write(BinaryReader)</a>
                  </td>
                  <td>
             Writes all available bytes from the data source to this output stream.
            </td>
                </tr>
                <tr>
                  <td>
                    <a href="9a8ad654-ec1d-9198-3b4f-8e51e956baf8.htm">Write(<span id="LST435A06B4_6" data-languageSpecificText="cpp=array&lt;"></span>Byte<span id="LST435A06B4_7" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>)</a>
                  </td>
                  <td>
            Writes <span class="code">data.Length</span> bytes from the specified byte array to this output stream.
            </td>
                </tr>
                <tr>
                  <td>
                    <a href="306e603e-742a-3e30-0b5d-cf1383b2ed10.htm">Write(<span id="LST435A06B4_8" data-languageSpecificText="cpp=array&lt;"></span>Byte<span id="LST435A06B4_9" data-languageSpecificText="cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]"></span>, Int32, Int32)</a>
                  </td>
                  <td>
            Writes <span class="code">length</span> bytes from <span class="code">data</span> starting at <span class="code">offset</span>.
            </td>
                </tr>
              </table>
            </div>
            <h2 class="quickLinkHeader">
              <span class="icon toggleSection" tabindex="0">
                <i class="fa fa-angle-down"></i>
              </span>See Also</h2>
            <div id="seeAlsoSection">
              <h4>Reference</h4>
              <div>
                <a href="e538c743-95a3-31fb-3585-19d9705d4e8f.htm">MultichannelConnection Class</a>
              </div>
              <div>
                <a href="85823b27-9fa5-7681-c212-8e536f601bbe.htm">Zebra.Sdk.Comm Namespace</a>
              </div>
            </div>
          </div>
          <div id="InThisArticleColumn" class="column is-hidden-mobile">
            <nav class="menu sticky is-hidden">
              <p class="menu-label">
                <strong>In This Article</strong>
              </p>
              <ul id="InThisArticleMenu" class="menu-list">
                <li>
                  <a class="quickLink">Methods</a>
                </li>
                <li>
                  <a class="quickLink">See Also</a>
                </li>
              </ul>
            </nav>
          </div>
        </div>
      </div>
      <footer id="PageFooter" class="footer border-top py-3 fixedFooter">
        <div class="columns">
          <div class="column">
            <p>© 2024 Zebra Technologies Corporation and/or its affiliates. All rights reserved.</p> 
				</div>
          <div class="column"> 
				</div>
        </div>
      </footer>
    </div>
    <script>$(function(){
SetDefaultLanguage("cs");
LoadTocFile(null, null);
InitializeQuickLinks();

$(".toggleSection" ).click(function () {
    SectionExpandCollapse(this);
});

$(".toggleSection").keypress(function () {
    SectionExpandCollapseCheckKey(this, event)
});
});</script>
  </body>
</html>